print("Hello World")
exit
install.packages(c("backports", "BH", "broom", "cli", "curl", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "haven", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "later", "lattice", "markdown", "mime", "mongolite", "odbc", "openssl", "packrat", "pillar", "pkgconfig", "purrr", "R6", "Rcpp", "RCurl", "readr", "readxl", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "rstudioapi", "shiny", "sparklyr", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "tinytex", "xfun", "xtable"))
install.packages(c("mongolite", "purrr"))
install.packages(c("mongolite", "purrr"))
library("datasets", lib.loc="C:/Users/Guilherme/Anaconda3/envs/rstudio/lib/R/library")
#Data Preprocessing
#Data Preprocessing
#Data Preprocessing
setwd("D:/Capacitação/2019/Data Science/Machine Learning A-Z™ Hands-On Python & R In Data Science/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
data = read.csv('Data.csv')
View(data)
View(data)
dataset = read.csv('Data.csv')
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
#Encoding categorical data
dataset$Country = factor(data$Country, levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased, levels = c('No', 'Yes'),
labels = c(0, 1))
library("caTools", lib.loc="C:/Users/Guilherme/Anaconda3/envs/rstudio/lib/R/library")
install.packages('caTools')
install.packages("caTools")
library("caTools", lib.loc="C:/Users/Guilherme/Anaconda3/envs/rstudio/lib/R/library")
library("datasets", lib.loc="C:/Users/Guilherme/Anaconda3/envs/rstudio/lib/R/library")
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
View(dataset)
View(dataset)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
View(test_set)
View(test_set)
